<?php
namespace Home\Controller;
use Think\Controller;
class ApiController extends Controller {
    static public $treeList = array(); //存放无限分类结果如果一页面有多个无限分类可以使用 Tool::$treeList = array(); 清空
    /**
     * 无限级分类
     * @access public 
     * @param Array $data     //数据库里获取的结果集 
     * @param string $idField ID字段名
     * @param string $pidField PID字段名
     * @param Int $pid             
     * @param Int $count       //第几级分类
     * @return Array $treeList
     */
    static public function tree(&$data,$idField='id',$pidField='pid',$pid = 0,$count = 1) {
        foreach ($data as $key => $value){
            if($value[$pidField]==$pid){
                $value['Count'] = $count;
                self::$treeList []=$value;
                unset($data[$key]);
                self::tree($data,$idField,$pidField,$value[$idField],$count+1);
            }
        }
        //pt(self::$treeList);
        return self::$treeList;
    }
    
    /**
     * 获取指定的一个分类集
     */
    function getBigColumn(){
        $F_SYSCOLUMN_ID = I('get.F_SYSCOLUMN_ID',0);
        $re = M('syscolumn')->where('F_SYS_COLUMN_PID='.$F_SYSCOLUMN_ID." and F_SYS_COLUMN_STATE=1")->order('F_SYS_COLUMN_SORT')->select();
        echo json_encode($re);
    }
    /**
     * 获取指定的一个分类集
     */
    function getBigC($F_SYSCOLUMN_ID=0){
        //$F_SYSCOLUMN_ID = I('get.F_SYSCOLUMN_ID',0);
        $re = M('syscolumn')->where('F_SYS_COLUMN_PID='.$F_SYSCOLUMN_ID." and F_SYS_COLUMN_STATE=1")->order('F_SYS_COLUMN_SORT')->select();
        return $re;
    }
   
    //退出系统
   function outLogin(){
        cookie('loginstrats',0); //  清空指定前缀的所有cookie值 
        cookie(null,'trackearnID');
        cookie(null,'trackmakeID');
    }
    

	public function searchCnameBymobile() {
		$mobile=I('post.mobile');
//		echo $mobile."======";
        $re = A('Api/Jhttp')->getCompanyByMobile($mobile);
        $arr = json_decode($re,true);
        $errorCode = $arr['resCode'];
        if($errorCode=='000000'){
            echo json_encode($arr['list']);
        }else{
            echo json_encode("");
        }
    }
	
	//用户修改密码
	public  function  WebChangePwd(){
		$mobile=I('post.mobile');
		$password=I('post.password');
		$companyId=I('post.companyId');
//   	echo $mobile."======";
        $re = A('Api/Jhttp')->WebChangePwd($mobile,$password,$companyId);
        $arr = json_decode($re,true);
        $errorCode = $arr['resCode'];
		echo json_encode($errorCode);
//      if($errorCode=='000000'){
//          echo json_encode();
//      }else{
//          echo json_encode("");
//      }
	}
   
   function showProReject($taskid){
        set_theme();
        $taskid = isset($_GET['taskid'])? $_GET['taskid'] : 0 ;
        $this->assign("taskid",$taskid);
        $map["f_taskid"]=$taskid;
        $result = M("taskreject")->where($map)->order('f_indexid asc')->select();
        // var_dump($taskid);
        //var_dump($result);
//      exit();
        foreach ($result as $key => $value) {
              $re1= M("sysuser")->where("id=".$value["f_rejectuserid"])->find();
//            if(!$re1){
//                $re=A("Api/Jhttp")->getUserinfo2($value["f_rejectuserid"]);
//                $arr=json_decode($re,true);
//                $mobile=$arr["list"]["mobile"];
//                $nickname=$arr["list"]["trueName"];
//                if($mobile==""){
//                    $re1["realname"]=$nickname;
//                }else{
//                    $re1["realname"]=$mobile;
//                }
//             }
            $result[$key]['user']=$re1;
            $result[$key]['f_datetime'] = date("Y/m/d H:i:s",$value['f_datetime']);
        }
//		var_dump($result);
//		exit;
        $this->assign("result",$result);
        $this->display("Public:show_reject");
    }

   
}
